@model Charter.Reporter.Web.Controllers.AccountController.ResetPasswordVm
@{
    ViewData["Title"] = "Reset Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row justify-content-center">
    <div class="col-lg-6">
        <div class="card shadow mb-4">
            <div class="card-header py-3 d-flex justify-content-between align-items-center">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-lock mr-2" aria-hidden="true"></i>
                    Create New Password
                </h6>
            </div>
            <div class="card-body">
                <p class="text-muted mb-4">
                    Enter your new password below. Make sure to use a strong password that you haven't used before.
                </p>

                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <div class="d-flex align-items-start">
                            <i class="fas fa-exclamation-triangle mr-2 mt-1" aria-hidden="true"></i>
                            <div>
                                <strong>Please fix the following issues:</strong>
                                <ul class="mb-0 mt-2">
                                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                    {
                                        <li>@error.ErrorMessage</li>
                                    }
                                </ul>
                            </div>
                        </div>
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                }
                
                <form asp-action="ResetPassword" method="post" id="resetPasswordForm" novalidate>
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="Email" />
                    <input type="hidden" asp-for="Token" />
                    
                    <div class="form-group">
                        <label asp-for="Password" class="form-label">
                            <i class="fas fa-lock text-muted mr-1"></i>
                            New Password
                        </label>
                        <div class="input-group">
                            <input asp-for="Password" 
                                   class="form-control" 
                                   placeholder="Enter your new password"
                                   autocomplete="new-password"
                                   required />
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                        </div>
                        <span asp-validation-for="Password" class="text-danger"></span>
                        <small class="form-text text-muted">
                            Password must be at least 8 characters long.
                        </small>
                    </div>
                    
                    <div class="form-group">
                        <label asp-for="ConfirmPassword" class="form-label">
                            <i class="fas fa-lock text-muted mr-1"></i>
                            Confirm New Password
                        </label>
                        <div class="input-group">
                            <input asp-for="ConfirmPassword" 
                                   class="form-control" 
                                   placeholder="Re-enter your new password"
                                   autocomplete="new-password"
                                   required />
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button" id="toggleConfirmPassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                        </div>
                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                    </div>
                    
                    <div class="form-group mb-0">
                        <button type="submit" class="btn btn-primary btn-block">
                            <i class="fas fa-save mr-2"></i>
                            Reset Password
                        </button>
                    </div>
                </form>
                
                <hr class="my-4">
                
                <div class="text-center">
                    <a asp-action="Login" asp-controller="Account" class="small">
                        <i class="fas fa-arrow-left mr-1"></i>
                        Back to Login
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function() {
            // Auto-focus on password field
            $('#Password').focus();
            
            // Toggle password visibility
            $('#togglePassword').click(function() {
                var passwordField = $('#Password');
                var type = passwordField.attr('type') === 'password' ? 'text' : 'password';
                passwordField.attr('type', type);
                $(this).find('i').toggleClass('fa-eye fa-eye-slash');
            });
            
            $('#toggleConfirmPassword').click(function() {
                var passwordField = $('#ConfirmPassword');
                var type = passwordField.attr('type') === 'password' ? 'text' : 'password';
                passwordField.attr('type', type);
                $(this).find('i').toggleClass('fa-eye fa-eye-slash');
            });
            
            // Password strength indicator
            $('#Password').on('input', function() {
                var password = $(this).val();
                var strength = 0;
                
                if (password.length >= 8) strength++;
                if (password.match(/[a-z]/)) strength++;
                if (password.match(/[A-Z]/)) strength++;
                if (password.match(/[0-9]/)) strength++;
                if (password.match(/[^a-zA-Z0-9]/)) strength++;
                
                var strengthText = '';
                var strengthClass = '';
                
                switch(strength) {
                    case 0:
                    case 1:
                        strengthText = 'Weak';
                        strengthClass = 'text-danger';
                        break;
                    case 2:
                    case 3:
                        strengthText = 'Fair';
                        strengthClass = 'text-warning';
                        break;
                    case 4:
                        strengthText = 'Good';
                        strengthClass = 'text-info';
                        break;
                    case 5:
                        strengthText = 'Strong';
                        strengthClass = 'text-success';
                        break;
                }
                
                if (password.length > 0) {
                    var strengthIndicator = $('#passwordStrength');
                    if (strengthIndicator.length === 0) {
                        $('#Password').parent().after('<small id="passwordStrength" class="form-text">Password Strength: <span></span></small>');
                    }
                    $('#passwordStrength span').text(strengthText).removeClass().addClass(strengthClass);
                } else {
                    $('#passwordStrength').remove();
                }
            });
            
            // Form validation
            $('#resetPasswordForm').on('submit', function(e) {
                var password = $('#Password').val();
                var confirmPassword = $('#ConfirmPassword').val();
                
                if (password.length < 8) {
                    e.preventDefault();
                    $('#Password').addClass('is-invalid');
                    return false;
                }
                
                if (password !== confirmPassword) {
                    e.preventDefault();
                    $('#ConfirmPassword').addClass('is-invalid');
                    return false;
                }
            });
            
            // Remove error state on input
            $('#Password, #ConfirmPassword').on('input', function() {
                $(this).removeClass('is-invalid');
            });
        });
    </script>
}

<style>
    .card {
        border: none;
        border-radius: 15px;
    }
    
    .card-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-radius: 15px 15px 0 0 !important;
    }
    
    .card-header h6 {
        color: white !important;
    }
    
    .form-control:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    }
    
    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        transition: all 0.3s ease;
    }
    
    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
    }
    
    .input-group-text {
        background-color: #f8f9fa;
        border-color: #dee2e6;
    }
    
    #passwordStrength {
        font-weight: 500;
    }
</style>
