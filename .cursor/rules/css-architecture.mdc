
# CSS Architecture Rules

## Critical Rules

### RULE 1: Modular CSS Hierarchy (MANDATORY)
- **MUST**: Use sb-admin-2.css as base UI token foundation
- **MUST**: Override base tokens with site.css and variables.css for UJ/site-specific styling
- **MUST**: Allow each module to override both base and site layers with module-specific CSS
- **ALWAYS**: Maintain clear cascade: sb-admin-2.css → site.css/variables.css → module.css
- **NEVER**: Skip any layer in the hierarchy
- **NEVER**: Put module styles in global files

### RULE 2: File Structure & Organization
- **MUST**: Keep sb-admin-2.css as unmodified base foundation
- **MUST**: Store UJ/site overrides in site.css and variables.css
- **MUST**: Store modules in wwwroot/css/modules/ directory
- **MUST**: One feature per CSS file for modules
- **ALWAYS**: Reference variables.css for theme values
- **NEVER**: Modify sb-admin-2.css directly
- **NEVER**: Mix feature styles in global files

### RULE 3: CSS Cascade Priority
- **MUST**: sb-admin-2.css loads first (base tokens)
- **MUST**: site.css and variables.css load second (UJ/site overrides)
- **MUST**: Module CSS loads last (specific overrides)
- **ALWAYS**: Use CSS specificity to ensure proper override order
- **NEVER**: Use !important unless absolutely necessary
- **NEVER**: Break the established cascade order

### RULE 4: BEM Methodology
- **MUST**: Use Block__Element--Modifier naming convention
- **MUST**: Keep selectors maximum 3 levels deep
- **MUST**: One block per component
- **ALWAYS**: Use consistent naming patterns across modules
- **NEVER**: Use ID selectors for styling
- **NEVER**: Create overly specific selectors

### RULE 5: Responsive Design
- **MUST**: Mobile-first approach (min-width media queries)
- **MUST**: Use relative units (rem, %, em) exclusively
- **MUST**: Test all breakpoints (320px, 768px, 1024px+)
- **ALWAYS**: Use CSS Grid/Flexbox for layouts
- **NEVER**: Use absolute pixels for layout
- **NEVER**: Design desktop-only interfaces

### RULE 6: Theme Consistency
- **MUST**: Use CSS variables from variables.css for ALL colors
- **MUST**: Use theme spacing variables from variables.css
- **MUST**: Follow SB Admin2 patterns established in base layer
- **ALWAYS**: Reference variables.css for consistency
- **NEVER**: Hardcode theme values
- **NEVER**: Override variables.css values in modules

### RULE 7: Accessibility
- **MUST**: Visible focus states (2px outline minimum)
- **MUST**: Maintain 4.5:1 contrast ratio for text
- **MUST**: Include .sr-only helper class where needed
- **ALWAYS**: Test keyboard navigation
- **NEVER**: Remove focus indicators
- **NEVER**: Use color alone for meaning

### RULE 8: Performance
- **MUST**: Use efficient selectors (single class when possible)
- **MUST**: Group related properties logically
- **MUST**: Minimize specificity conflicts
- **ALWAYS**: Use CSS containment where appropriate
- **NEVER**: Use universal selector (*)
- **NEVER**: Create overly complex selectors

## CSS Structure Checklist
✓ Modular hierarchy maintained (sb-admin-2 → site/variables → modules)
✓ Base layer (sb-admin-2.css) unmodified
✓ UJ/site overrides in site.css and variables.css
✓ Module-specific CSS in modules/ directory
✓ BEM naming convention followed
✓ Mobile-first media queries
✓ CSS variables for theming
✓ Accessible focus states
✓ Efficient selectors
✓ Consistent spacing
✓ Cross-browser tested

## CSS Loading Order (CRITICAL)
```html
<!-- 1. Base UI tokens (DO NOT MODIFY) -->
<link rel="stylesheet" href="~/css/sb-admin-2.css">

<!-- 2. UJ and site-specific overrides -->
<link rel="stylesheet" href="~/css/site.css">
<link rel="stylesheet" href="~/css/variables.css">

<!-- 3. Module-specific styles (load last for overrides) -->
<link rel="stylesheet" href="~/css/modules/Admin.css">
<link rel="stylesheet" href="~/css/modules/Orders.css">
```

## Quick Reference
```css
/* File: modules/OrderCard.css */
.order-card { }                    /* Block */
.order-card__header { }            /* Element */
.order-card--urgent { }            /* Modifier */

/* Always use variables from variables.css */
color: var(--primary);             /* Not #4e73df */
padding: var(--spacing-md);        /* Not 1rem */

/* Mobile-first approach */
.component { width: 100%; }        /* Mobile */
@media (min-width: 768px) { }      /* Tablet+ */

/* Override hierarchy example */
/* sb-admin-2.css defines .btn-primary */
/* variables.css overrides with UJ colors */
/* module.css can override for specific needs */
```

## Module CSS Template
```css
/* File: modules/[ModuleName].css */
/* Overrides both sb-admin-2.css and variables.css */

/* Module-specific overrides */
.module-name {
    /* Override base styles */
    background-color: var(--module-bg);
    
    /* Module-specific properties */
    border-radius: var(--border-radius-lg);
}

/* Responsive overrides */
@media (min-width: 768px) {
    .module-name {
        /* Tablet+ specific styles */
    }
}
```

## Override Guidelines
- **Base Layer (sb-admin-2.css)**: Contains fundamental UI tokens, DO NOT MODIFY
- **Site Layer (site.css/variables.css)**: Contains UJ-specific overrides and theme variables
- **Module Layer (modules/*.css)**: Contains feature-specific overrides and customizations
- **Priority**: Module > Site > Base (highest to lowest)
- **Specificity**: Use appropriate CSS specificity to ensure proper override order
/* Mobile-first */
.component { width: 100%; }        /* Mobile */
@media (min-width: 768px) { }      /* Tablet+ */
```