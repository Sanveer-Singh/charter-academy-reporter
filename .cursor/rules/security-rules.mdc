---
description: Mandatory security standards and OWASP compliance
globs: ["**/*"]
alwaysApply: false
---

# Security Rules - OWASP Compliance

## Critical Rules

### RULE 1: Authentication & Authorization
- **MUST**: Use role-based access control on ALL admin functions
- **MUST**: Validate permissions at UI AND API levels
- **MUST**: Use ASP.NET Core Identity for user management
- **ALWAYS**: Regenerate session ID on login
- **NEVER**: Store passwords in plain text

### RULE 2: Input Validation
- **MUST**: Validate ALL inputs server-side
- **MUST**: Use model validation attributes
- **MUST**: Sanitize before storage AND display
- **ALWAYS**: Use BaseController validation
- **NEVER**: Trust client-side validation only

### RULE 3: SQL Injection Prevention
- **MUST**: Use parameterized queries EXCLUSIVELY
- **MUST**: Use Entity Framework properly
- **ALWAYS**: Validate input before queries
- **NEVER**: Concatenate SQL strings
- **NEVER**: Use string interpolation in SQL

```csharp
// CRITICAL - ALWAYS DO THIS
await _context.Orders.Where(o => o.Id == id).ToListAsync();

// CRITICAL - NEVER DO THIS
var sql = $"SELECT * FROM Orders WHERE Id = {id}"; // SQL INJECTION RISK
```

### RULE 4: XSS Prevention
- **MUST**: Encode ALL output
- **MUST**: Use Razor automatic encoding
- **MUST**: Sanitize rich text content
- **ALWAYS**: Set Content Security Policy headers
- **NEVER**: Use Html.Raw() with user input

### RULE 5: Access Control
- **MUST**: Check authorization for every action
- **MUST**: Default deny all permissions
- **MUST**: Validate permissions server-side
- **ALWAYS**: Log access failures
- **NEVER**: Rely on client-side security

```csharp
// CRITICAL - ALWAYS USE
[Authorize(Roles = "Admin")]
public async Task<IActionResult> AdminAction()
```

### RULE 6: Data Protection
- **MUST**: Encrypt sensitive data at rest
- **MUST**: Use HTTPS for ALL communications
- **MUST**: Secure API keys and secrets
- **ALWAYS**: Use Data Protection API
- **NEVER**: Log sensitive information

### RULE 7: Security Headers
- **MUST**: Set X-Content-Type-Options: nosniff
- **MUST**: Set X-Frame-Options: DENY
- **MUST**: Set X-XSS-Protection: 1; mode=block
- **ALWAYS**: Use HTTPS Strict Transport Security
- **NEVER**: Allow unsafe inline scripts

### RULE 8: Audit Logging
- **MUST**: Log all security events
- **MUST**: Log authentication attempts
- **MUST**: Log authorization failures
- **ALWAYS**: Include timestamp and user
- **NEVER**: Log passwords or sensitive data

### RULE 9: Session Security
- **MUST**: Use secure, httpOnly cookies
- **MUST**: Implement session timeout (20 min)
- **MUST**: Regenerate session ID on login
- **ALWAYS**: Clear session on logout
- **NEVER**: Store sensitive data in session

### RULE 10: Password Policy
- **MUST**: Minimum 8 characters
- **MUST**: Require complexity (upper, lower, number, special)
- **MUST**: Implement account lockout (5 attempts)
- **ALWAYS**: Hash with bcrypt/scrypt
- **NEVER**: Store passwords in plain text

## OWASP Top 10 Checklist
✓ A01: Injection - Parameterized queries only
✓ A02: Broken Authentication - Identity framework, MFA ready
✓ A03: Sensitive Data - Encryption at rest/transit
✓ A04: XML External Entities - Use JSON, disable XXE
✓ A05: Access Control - Server-side auth checks
✓ A06: Security Misconfig - Headers, no defaults
✓ A07: XSS - Output encoding, CSP headers
✓ A08: Deserialization - Validate, use simple types
✓ A09: Vulnerable Components - Scan, update regularly
✓ A10: Logging - Comprehensive audit trail

## Security Quick Reference
```
Authentication: ASP.NET Core Identity
Authorization: [Authorize] attributes
Validation: Model attributes + BaseController
SQL: Parameterized queries ONLY
XSS: Automatic Razor encoding
Encryption: Data Protection API
Headers: Set in middleware
Logging: AuditService pattern
Session: 20min timeout, secure cookies
Passwords: 8+ chars, complexity required
```

## Incident Response
1. **Detect**: Monitor logs for anomalies
2. **Contain**: Isolate affected systems
3. **Investigate**: Determine scope
4. **Remediate**: Fix vulnerabilities
5. **Document**: Update security measures
6. **Test**: Verify fix effectiveness
7. **Monitor**: Enhanced surveillance