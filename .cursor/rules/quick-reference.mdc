---
description: Quick reference guide for optimized cursor rules with surgical injection examples
globs: ["**/*"]
alwaysApply: true
---

# Quick Reference: Optimized Cursor Rules

## üöÄ Start Here
**Always begin with**: `@bug-fix-workflow.mdc`

## üìã Phase-by-Phase Loading

### Phase 1: Analysis
```markdown
Load: @consolidated-rules.mdc#Analysis Phase
Reference: @project-context.mdc#User Roles
Output: BugAnalysis_YYYYMMDD_HHMM_Description.md
State: RULE_WF_PHASE_ANALYSIS
```

### Phase 2: Planning
```markdown
Load: @consolidated-rules.mdc#Planning Phase
Reference: @solid-architecture.mdc#SOLID Principles
Output: BugPlan_YYYYMMDD_HHMM_Description.md
State: RULE_WF_PHASE_PLANNING
```

### Phase 3: Implementation
```markdown
Load: @consolidated-rules.mdc#Implementation Phase
Reference: @implementation-rules.mdc#Coding Standards
State: RULE_WF_PHASE_IMPLEMENTATION
```

### Phase 4: QA
```markdown
Load: @consolidated-rules.mdc#QA Phase
Reference: @qa-rules.mdc#Quality Standards
State: RULE_WF_PHASE_QA
```

### Phase 5: Review
```markdown
Load: @consolidated-rules.mdc#Review Phase
Reference: @review-rules.mdc#Review Standards
State: RULE_WF_PHASE_FINAL_REVIEW
```

## üéØ Context-Specific Rules

### UI/UX Bug Fix
```markdown
Load: @consolidated-rules.mdc#UI/UX Changes
Reference: @ux-guidelines.mdc#Design Principles
```

### Database Bug Fix
```markdown
Load: @consolidated-rules.mdc#Database Changes
Reference: @data-db.mdc#Entity Framework
```

### Security Bug Fix
```markdown
Load: @consolidated-rules.mdc#Security & Compliance
Reference: @security-rules.mdc#OWASP Top 10
```

### Performance Bug Fix
```markdown
Load: @consolidated-rules.mdc#Performance Issues
Reference: @performance.mdc#Optimization
```

## üîß State Management
**Always update**: `@workflow-state.mdc` before phase transitions
**Use templates**: `@workflow-state.mdc#State Transition Templates`

## üìö Rule Files Priority

### High Priority (Load First)
1. `@bug-fix-workflow.mdc` - Main workflow
2. `@consolidated-rules.mdc` - Phase-specific rules
3. `@project-context.mdc` - Project requirements

### Medium Priority (Load as Needed)
4. `@workflow-state.mdc` - State management
5. Individual rule files for deep technical detail

### Low Priority (Reference Only)
6. Detailed technical standards when specific compliance needed

## üí° Surgical Injection Examples

### Login Page Bug
```markdown
Load: @consolidated-rules.mdc#Analysis Phase, @consolidated-rules.mdc#UI/UX Changes
Reference: @project-context.mdc#Authentication Requirements
```

### Database Query Bug
```markdown
Load: @consolidated-rules.mdc#Analysis Phase, @consolidated-rules.mdc#Database Changes
Reference: @project-context.mdc#Data Model
```

### Security Vulnerability
```markdown
Load: @consolidated-rules.mdc#Analysis Phase, @consolidated-rules.mdc#Security & Compliance
Reference: @project-context.mdc#Security Priorities
```

## ‚úÖ Success Checklist
- [ ] Workflow state updated
- [ ] Phase-specific rules loaded
- [ ] Context-dependent rules loaded (if applicable)
- [ ] @subsection references used for surgical injection
- [ ] Output documents created
- [ ] User approval obtained

## üö´ Common Mistakes
- ‚ùå Loading entire rule files instead of @subsection references
- ‚ùå Forgetting to update workflow state
- ‚ùå Skipping phase-specific rule loading
- ‚ùå Not using surgical injection for context-specific rules

## üìñ Full Documentation
See `@README.md` for complete optimization details and migration guide.

**Remember**: Start with `@bug-fix-workflow.mdc`, use `@consolidated-rules.mdc` for phase guidance, and reference `@subsection` for surgical rule injection.
