---
name: View Rules
appliesTo:
  - "**/Views/**/*.cshtml"
  - "**/wwwroot/**/*.css"
triggers:
  keywords: ["view", "razor", "sb-admin-2", "bootstrap", "aria", "wcag"]
order: 50
---
# VIEW CONTEXT RULES

## When working in @Views/*

### IMMUTABLE VIEW RULES
- MUST use strongly-typed ViewModels
- MUST NOT contain business logic
- MUST use Tag Helpers over HTML helpers
- MUST be mobile-responsive using Bootstrap grid
- MUST include proper ARIA labels for accessibility
- MUST use semantic HTML elements
- MUST follow SB Admin 2 theme patterns
- MUST avoid inline CSS; place styles in `site.css` or module CSS
- MUST use CSS variables and theme colors; prefer `rem`/% sizing

### LAYOUT STRUCTURE
```razor
@* @Views/Shared/_Layout.cshtml *@
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>@ViewData["Title"] - Charter Reporter</title>
    
    <!-- Custom fonts for SB Admin 2 -->
    <link href="~/lib/sb-admin-2/vendor/fontawesome-free/css/all.min.css" rel="stylesheet">
    
    <!-- Custom styles -->
    <link href="~/lib/sb-admin-2/css/sb-admin-2.min.css" rel="stylesheet">
    <link href="~/css/site.css" rel="stylesheet">
    @await RenderSectionAsync("Styles", required: false)
</head>
<body id="page-top">
    <!-- Page Wrapper -->
    <div id="wrapper">
        <!-- Sidebar -->
        <partial name="_Sidebar" />
        
        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">
            <!-- Main Content -->
            <div id="content">
                <!-- Topbar -->
                <partial name="_Topbar" />
                
                <!-- Begin Page Content -->
                <div class="container-fluid">
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle"></i> @TempData["Success"]
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    }
                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-circle"></i> @TempData["Error"]
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    }
                    
                    @RenderBody()
                </div>
            </div>
            
            <!-- Footer -->
            <partial name="_Footer" />
        </div>
    </div>
    
    <!-- Scripts -->
    <script src="~/lib/sb-admin-2/vendor/jquery/jquery.min.js"></script>
    <script src="~/lib/sb-admin-2/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/sb-admin-2/js/sb-admin-2.min.js"></script>
    <script src="~/js/site.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
```

### FORM PATTERNS
```razor
@* Standard form with validation *@
@model CreateReportViewModel

<form asp-action="Create" method="post" novalidate>
    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
    
    <div class="row">
        <div class="col-md-6 mb-3">
            <label asp-for="Name" class="form-label required"></label>
            <input asp-for="Name" class="form-control" placeholder="Enter report name" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        
        <div class="col-md-6 mb-3">
            <label asp-for="ReportType" class="form-label required"></label>
            <select asp-for="ReportType" asp-items="Model.ReportTypes" class="form-control">
                <option value="">-- Select Type --</option>
            </select>
            <span asp-validation-for="ReportType" class="text-danger"></span>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-6 mb-3">
            <label asp-for="StartDate" class="form-label"></label>
            <input asp-for="StartDate" type="date" class="form-control" />
            <span asp-validation-for="StartDate" class="text-danger"></span>
        </div>
        
        <div class="col-md-6 mb-3">
            <label asp-for="EndDate" class="form-label"></label>
            <input asp-for="EndDate" type="date" class="form-control" />
            <span asp-validation-for="EndDate" class="text-danger"></span>
        </div>
    </div>
    
    <div class="row">
        <div class="col-12">
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-save"></i> Create Report
            </button>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="fas fa-times"></i> Cancel
            </a>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
```

### TABLE PATTERNS
```razor
@* Responsive table with actions *@
@model ReportListViewModel

<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex justify-content-between align-items-center">
        <h6 class="m-0 font-weight-bold text-primary">Reports</h6>
        @if (User.IsInRole(AppConstants.Roles.CharterAdmin))
        {
            <a asp-action="Create" class="btn btn-primary btn-sm">
                <i class="fas fa-plus"></i> Create New
            </a>
        }
    </div>
    <div class="card-body">
        @if (Model.Reports.Any())
        {
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="reportsTable">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Type</th>
                            <th>Created Date</th>
                            <th>Status</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var report in Model.Reports)
                        {
                            <tr>
                                <td>@report.Name</td>
                                <td>
                                    <span class="badge badge-@GetTypeBadgeClass(report.Type)">
                                        @report.Type
                                    </span>
                                </td>
                                <td data-sort="@report.CreatedAt.Ticks">
                                    @report.CreatedAt.ToString("dd MMM yyyy")
                                </td>
                                <td>
                                    <i class="fas fa-circle text-@GetStatusColor(report.Status)"></i>
                                    @report.Status
                                </td>
                                <td class="text-center">
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@report.Id" 
                                           class="btn btn-info btn-sm" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        @if (report.CanExport)
                                        {
                                            <a asp-action="Export" asp-route-id="@report.Id" 
                                               class="btn btn-success btn-sm" title="Export">
                                                <i class="fas fa-download"></i>
                                            </a>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            
            <partial name="_Pagination" model="Model.Pagination" />
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-folder-open fa-3x text-gray-400 mb-3"></i>
                <p class="text-muted">No reports found</p>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Create First Report
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="~/lib/datatables/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables/dataTables.bootstrap4.min.js"></script>
    <script>
        $(document).ready(function() {
            // Server-side processing; no client-side filtering/sorting
            $('#reportsTable').DataTable({
                processing: true,
                serverSide: true,
                order: [[2, 'desc']],
                pageLength: 25,
                responsive: true,
                ajax: {
                    url: '@Url.Action("GetReportsPage", "Reports")',
                    type: 'POST',
                    headers: { 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() }
                },
                columns: [
                    { data: 'name' },
                    { data: 'type' },
                    { data: 'createdAt' },
                    { data: 'status' },
                    { data: 'actions', orderable: false, searchable: false }
                ]
            });
        });
    </script>
}
```

### DASHBOARD WIDGETS
```razor
@* @Views/Shared/Components/StatsWidget/Default.cshtml *@
@model StatsWidgetViewModel

<div class="col-xl-3 col-md-6 mb-4">
    <div class="card border-left-@Model.ColorClass shadow h-100 py-2">
        <div class="card-body">
            <div class="row no-gutters align-items-center">
                <div class="col mr-2">
                    <div class="text-xs font-weight-bold text-@Model.ColorClass text-uppercase mb-1">
                        @Model.Title
                    </div>
                    <div class="h5 mb-0 font-weight-bold text-gray-800">
                        @Model.Value
                    </div>
                    @if (!string.IsNullOrEmpty(Model.SubText))
                    {
                        <div class="text-xs text-muted mt-1">
                            @Model.SubText
                        </div>
                    }
                </div>
                <div class="col-auto">
                    <i class="fas fa-@Model.Icon fa-2x text-gray-300"></i>
                </div>
            </div>
        </div>
    </div>
}</div>
```

### CHART INTEGRATION
```razor
@* Chart container with loading state *@
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Course Completions</h6>
    </div>
    <div class="card-body">
        <div class="chart-container" style="position: relative; height:40vh; width:100%">
            <canvas id="completionsChart"></canvas>
        </div>
        <div id="chartLoading" class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/chart.js/Chart.min.js"></script>
    <script>
        $(document).ready(function() {
            loadChartData();
        });
        
        function loadChartData() {
            $.ajax({
                url: '@Url.Action("GetCompletionData", "Dashboard")',
                type: 'POST',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(data) {
                    $('#chartLoading').hide();
                    renderChart(data);
                },
                error: function() {
                    $('#chartLoading').html('<div class="alert alert-danger">Failed to load chart data</div>');
                }
            });
        }
        
        function renderChart(data) {
            var ctx = document.getElementById('completionsChart').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: data.labels,
                    datasets: [{
                        label: 'Completions',
                        data: data.values,
                        backgroundColor: 'rgba(0, 51, 102, 0.8)', // Navy blue
                        borderColor: 'rgba(0, 51, 102, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }
    </script>
}
```

### PARTIAL VIEWS
```razor
@* @Views/Shared/_Pagination.cshtml *@
@model PaginationViewModel

@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <!-- Previous -->
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@GetPageUrl(Model.CurrentPage - 1)" 
                   aria-label="Previous" tabindex="@(Model.CurrentPage == 1 ? "-1" : "0")">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
            
            <!-- Page numbers -->
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (ShouldShowPage(i, Model.CurrentPage, Model.TotalPages))
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@GetPageUrl(i)">
                            @i
                            @if (i == Model.CurrentPage)
                            {
                                <span class="sr-only">(current)</span>
                            }
                        </a>
                    </li>
                }
                else if (ShouldShowEllipsis(i, Model.CurrentPage, Model.TotalPages))
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
            }
            
            <!-- Next -->
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@GetPageUrl(Model.CurrentPage + 1)" 
                   aria-label="Next" tabindex="@(Model.CurrentPage == Model.TotalPages ? "-1" : "0")">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
        </ul>
    </nav>
}

@functions {
    private string GetPageUrl(int page)
    {
        var routeData = new RouteValueDictionary(ViewContext.RouteData.Values);
        routeData["page"] = page;
        
        foreach (var key in Context.Request.Query.Keys)
        {
            if (key != "page")
                routeData[key] = Context.Request.Query[key];
        }
        
        return Url.Action(null, routeData);
    }
    
    private bool ShouldShowPage(int page, int current, int total)
    {
        return page == 1 || page == total || 
               (page >= current - 2 && page <= current + 2);
    }
    
    private bool ShouldShowEllipsis(int page, int current, int total)
    {
        return page == current - 3 || page == current + 3;
    }
}
```

### MOBILE RESPONSIVENESS
```razor
@* Mobile-first responsive design *@
<div class="row">
    <!-- Stats cards stack on mobile -->
    <div class="col-12 col-sm-6 col-lg-3 mb-4">
        <div class="card">
            <!-- Content -->
        </div>
    </div>
    
    <!-- Form adjusts for mobile -->
    <div class="col-12 col-md-8 col-lg-6">
        <form>
            <div class="row">
                <div class="col-12 col-sm-6 mb-3">
                    <!-- Form field -->
                </div>
            </div>
        </form>
    </div>
    
    <!-- Table wrapper for horizontal scroll on mobile -->
    <div class="col-12">
        <div class="table-responsive">
            <table class="table">
                <!-- Table content -->
            </table>
        </div>
    </div>
</div>

@section Styles {
    <style>
        @media (max-width: 768px) {
            .card-header {
                flex-direction: column;
                align-items: start !important;
            }
            
            .card-header .btn {
                margin-top: 0.5rem;
                width: 100%;
            }
            
            .btn-group {
                display: flex;
                flex-direction: column;
                width: 100%;
            }
            
            .btn-group .btn {
                border-radius: 0.25rem !important;
                margin: 0.125rem 0;
            }
        }
    </style>
}
```

### ACCESSIBILITY PATTERNS
```razor
@* Accessible form with ARIA labels *@
<form role="form" aria-label="Report Filter Form">
    <fieldset>
        <legend class="sr-only">Filter Options</legend>
        
        <div class="form-group">
            <label for="dateRange" id="dateRangeLabel">Date Range</label>
            <select id="dateRange" class="form-control" 
                    aria-labelledby="dateRangeLabel" 
                    aria-describedby="dateRangeHelp">
                <option value="">Select date range</option>
            </select>
            <small id="dateRangeHelp" class="form-text text-muted">
                Choose a predefined date range or use custom dates
            </small>
        </div>
    </fieldset>
    
    <button type="submit" class="btn btn-primary" aria-label="Apply filters">
        <i class="fas fa-filter" aria-hidden="true"></i> Apply Filters
    </button>
</form>

@* Skip navigation link *@
<a href="#main-content" class="sr-only sr-only-focusable">Skip to main content</a>

@* Loading states with screen reader support *@
<div class="loading-container" aria-live="polite" aria-busy="true">
    <div class="spinner-border" role="status">
        <span class="sr-only">Loading report data...</span>
    </div>
}</div>

@* Error messages with proper ARIA *@
<div class="alert alert-danger" role="alert" aria-live="assertive">
    <h4 class="alert-heading">
        <i class="fas fa-exclamation-triangle" aria-hidden="true"></i> Error
    </h4>
    <p>Failed to load report data. Please try again.</p>
</div>
```

### TESTING CONSIDERATIONS
- Validate HTML output is semantic
- Test keyboard navigation works
- Verify screen reader compatibility
- Test on multiple devices/browsers
- Ensure forms have proper validation
- Check color contrast meets WCAG standards
- Prefer SB Admin 2 components/utilities before custom CSS

